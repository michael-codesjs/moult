schema {
  query: Query
  mutation: Mutation
}

enum EntityType {
  USER
}

interface Common {
  id: ID!
  entity_type: EntityType!
  creator: ID!
  creator_type: EntityType!
  created_at: AWSDateTime!
  modified_at: AWSDateTime
  discontinued: Boolean!
}

input UpdateUserInput {
  name: String
  phone_number: String
  email: String
}

type User implements Common {
  id: ID!
  entity_type: EntityType!
  creator: ID!
  creator_type: EntityType!
  created_at: AWSDateTime!
  modified_at: AWSDateTime
  discontinued: Boolean!
  name: String!
  phone_number: String
  email: String
}

type Query {
  getUser(id: String!): User!
  checkUsernameAvailability(username: String!): Boolean!
}

type Mutation {
  updateUser(input: UpdateUserInput!): User!
}
